#version 430
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout (local_size_x = 16, local_size_y = 16) in;

layout (binding = 0, rgba32f) uniform readonly image2D inputImage;
layout (binding = 1, rgba32f) uniform image2D resultImage;

const float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);


void main() {
	
	vec3 result = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)).rgb * weight[0];

	for(int i = 0; i < 5; ++i)
	{
		result += imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x + i, gl_GlobalInvocationID.y)).rgb * weight[i];
		result += imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x - i, gl_GlobalInvocationID.y)).rgb * weight[i];
	}

	//result /= 16.0f;
	imageStore(resultImage, ivec2(gl_GlobalInvocationID.xy), vec4(result.xyz, 1.0f));

}
